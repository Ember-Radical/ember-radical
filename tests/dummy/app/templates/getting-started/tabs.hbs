<section>
  <p class="intro">Tabs are a great interface pattern for displaying sets of related content that you want to give focus to one item at a time.</p>
</section>
<section>

  <h3>Examples</h3>

  {{code-example
    title='Basic Example'
    language='handlebars' code='{{#rad-tabs defaultTab="tab-a" as |components|}}
  {{#components.content label="Tab A" elementId="tab-a"}}
    <p>Tab A Content</p>
  {{/components.content}}
  {{#components.content label="Tab B"}}
    <p>Tab B Content</p>
  {{/components.content}}
  {{#components.content label="Tab C"}}
    <p>Tab C Content</p>
  {{/components.content}}
{{/rad-tabs}}'}}

  <br>

  {{code-example
    title='Plain Style'
    language='handlebars' code='{{#rad-tabs defaultTab="dumpsterShrimp" buttonStyle=false as |components|}}
  {{#components.content label="Shrimp" elementId="dumpsterShrimp"}}
    <p>BRINGO! There be some pretty good lil shrimpers in here, lets check it out.</p>
  {{/components.content}}
  {{#components.content label="Capn Jack"}}
    <p>This here is salty sea captain name of Jack Springo</p>
  {{/components.content}}
  {{#components.content label="Fresh Water"}}
    <p>Boy I sure did work up a thirst after eating all them shramps. Time to wash it down with a cool glass of marina water.</p>
  {{/components.content}}
{{/rad-tabs}}'}}

  <br>

  {{code-example
    title='Scroll on Click'
    language='handlebars' code='{{#rad-tabs defaultTab="scrimp" scrollOnClick=true as |components|}}
  {{#components.content label="Shrimp" elementId="scrimp"}}
    <p>BRINGO! There be some pretty good lil shrimpers in here, lets check it out.</p>
  {{/components.content}}
  {{#components.content label="Capn Jack"}}
    <p>This here is salty sea captain name of Jack Springo</p>
  {{/components.content}}
  {{#components.content label="Fresh Water"}}
    <p>Boy I sure did work up a thirst after eating all them shramps. Time to wash it down with a cool glass of marina water.</p>
  {{/components.content}}
{{/rad-tabs}}'}}

  <br>

  {{code-example
    title='Show/Hide Tabs'
    language='handlebars' code='{{#rad-state as |stateValue stateActions|}}
  <p>{{#rad-button click=(action stateActions.toggleState)}}Show/hide the "Baz" tab{{/rad-button}}</p>
  <br>
  {{#rad-tabs defaultTab="quux" as |components|}}
    {{#components.content label="Quux" elementId="quux"}}
      <p>This is the Quux tab.</p>
    {{/components.content}}
    {{#components.content label="Baz" elementId="baz" hidden=stateValue}}
      <p>I am the sometimes hidden Baz tab.</p>
    {{/components.content}}
  {{/rad-tabs}}
{{/rad-state}}'}}

  <br>

{{! ------------------------------------------------------------------------- }}
{{! This example has auto-render disabled because the references to           }}
{{! properties on the controller won't survive the transition into the        }}
{{! component itself. Luckily we can use `code-example` in block form to      }}
{{! display whatever rendered output we want like a normal real boy template. }}
{{! ------------------------------------------------------------------------- }}
  {{#code-example
    autoRender=false
    title='Dynamically Add Tabs'
    language='handlebars' code='{{#rad-button
  click=(action "addTab")
  disabled=disableAddTabButton}}Add a tab{{/rad-button}}

{{#rad-tabs defaultTab="bar" as |components|}}
  {{#each tabs as |tab|}}
    {{#components.content label=tab.label elementId=tab.elementId}}
      <p>{{tab.content}}</p>
    {{/components.content}}
  {{/each}}
{{/rad-tabs}}'}}
    <p>
      {{#rad-button
        click=(action "addTab")
        disabled=disableAddTabButton}}Add a tab{{/rad-button}}
    </p>
    <br>
    {{#rad-tabs defaultTab="bar" as |components|}}
      {{#each tabs as |tab|}}
        {{#components.content label=tab.label elementId=tab.elementId}}
          <p>{{tab.content}}</p>
        {{/components.content}}
      {{/each}}
    {{/rad-tabs}}
  {{/code-example}}

  <br>

  {{#code-example
    title='Change Tabs Internally'
    language='handlebars'
    code="{{#rad-tabs
  defaultTab='tab-is-rad' as |components activeTab showTab|}}
  {{#components.content label='Rad' elementId='tab-is-rad'}}
    <img src='https://media.giphy.com/media/yoJC2H0rOyjDS4zgxq/giphy.gif' class='img-fluid' alt='A pretty rad gif. It says rad.'>
    <p>Pretend there is some arbitrary content in here talking about a subject that may be related to content in the totally rad tab.</p>
    {{#rad-button click=(action showTab 'tab-is-totally-rad')}}
      Select the totally rad tab
    {{/rad-button}}
  {{/components.content}}
  {{#components.content label='Totally Rad' elementId='tab-is-totally-rad'}}
    <img src='https://media.giphy.com/media/3yFr6ODcNHhrW/giphy.gif' class='img-fluid' alt='A totally rad gif. It says TOTALLY RAD'>
    <p>This tab is not just rad, but TOTALLY rad. If that's too rad for you, might I suggest that you go back to the rad (but not AS rad) tab where you came from.</p>
    {{#rad-button click=(action showTab 'tab-is-rad')}}
      Select the regular boring rad tab
    {{/rad-button}}
  {{/components.content}}
{{/rad-tabs}}"}}
  {{/code-example}}
</section>

<section>
  <h3>Properties</h3>

  <hr>

  {{#rad-tabs
    defaultTab='passedProps'
    card=true as |components|}}
    {{#components.content
      label='Passed'
      elementId='passedProps'}}
      <table class="full-width">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>activeId</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>The <code>elementId</code> of the tab that is currently visible</td>
          </tr>
          <tr>
            <td><code>buttonStyle</code></td>
            <td>{Boolean}</td>
            <td>true</td>
            <td>Set to false for tab buttons without primary background-color</td>
          </tr>
          <tr>
            <td><code>buttonStyleClassNames</code></td>
            <td>{Boolean}</td>
            <td>''</td>
            <td>Specific class name to use on the parent <code>&lt;ul&gt;</code> element when wanting to style tabs as "buttons"</td>
          </tr>
          <tr>
            <td><code>card</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Applies the <code>rad-card</code> styling to the rendered tab content panels for extra slick looks</td>
          </tr>
          <tr>
            <td><code>defaultTab</code></td>
            <td>{String}</td>
            <td>false</td>
            <td>The tab to display as the default on initial render. Should match the 'elementId' supplied to a child <code>rad-tabs/content</code> component.</td>
          </tr>
          <tr>
            <td><code>onChange</code></td>
            <td>{Function}</td>
            <td>() => {}</td>
            <td>Optional behavior to call when any tab is clicked/opened</td>
          </tr>
          <tr>
            <td><code>scrollOnClick</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Scroll the current page to the top OR specified target when a tab is clicked</td>
          </tr>
          <tr>
            <td><code>scrollTarget</code></td>
            <td>{String}</td>
            <td>'body, html'</td>
            <td>Specify scroll animation target as a jQuery selector</td>
          </tr>
          <tr>
            <td><code>tabButtonClassNames</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Custom Class name(s) to apply for the individual tab <code>&lt;button&gt;</code> elements</td>
          </tr>
          <tr>
            <td><code>tabClassNames</code></td>
            <td>{String}</td>
            <td>'tab-li'</td>
            <td>Class name(s) to use for the individual tab <code>&lt;li&gt;</code> elements</td>
          </tr>
          <tr>
            <td><code>tabListClassNames</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Custom class name(s) to use on the enclosing tabs <code>&lt;ul&gt;</code></td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
    {{#components.content
      label='Yielded'}}
      <table class="full-width">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>components</code></td>
            <td>{Object}</td>
            <td>N/A</td>
            <td>
              <p>Child components yielded by the component</p>
              <p class="small enums"><strong>Enums:</strong> components.content</p>
            </td>
          </tr>
        </tbody>
        <tbody>
          <tr>
            <td><code>activeTab</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>
              <p>The elementId of the currently active tab</p>
            </td>
          </tr>
          <tr>
            <td><code>showTab</code></td>
            <td>{Function}</td>
            <td>N/A</td>
            <td>
              <p>Use this action with a tab's <code>elementId</code> as the sole argument to cause that tab to become selected. Useful for manipulating the tab state within the tab context.</p>
            </td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
    {{#components.content
      label='RadTabs.Content'}}
      <table class="full-width">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>ariaLabelledBy</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Specifies the tab that serves as the label for the specific tab panel</td>
          </tr>
          <tr>
            <td><code>elementId</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Set a specific id for this component when using container <code>defaultTab</code> (overrides auto-generated ID)</td>
          </tr>
          <tr>
            <td><code>hidden</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Whether this tab should exist but be hidden from view if certain data is not available.</td>
          </tr>
          <tr>
            <td><code>label</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Text label of the tab button for this panel</td>
          </tr>
          <tr>
            <td><code>tabDataTest</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Binds to the <code>data-test</code> attribute of the tab's button</td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
  {{/rad-tabs}}
</section>